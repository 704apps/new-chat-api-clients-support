"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.autheticateRoutes = void 0;
var _express = require("express");
var _AutenticateUserController = require("../../../../modules/accounts/useCases/authenticateUser/AutenticateUserController");
var _CreateUserController = require("../../../../modules/accounts/useCases/createUser/CreateUserController");
var _RefreshTokenUserController = require("../../../../modules/accounts/useCases/refreshTokenUser/RefreshTokenUserController");
var _GetOneUserController = require("../../../../modules/accounts/useCases/getOneUser/GetOneUserController");
var _GetOneUserByEmailController = require("../../../../modules/accounts/useCases/getOneUserByEmail/GetOneUserByEmailController");
var _GetAllUsersController = require("../../../../modules/accounts/useCases/getAllUsers/GetAllUsersController");
var _ResetPasswordNoEmailController = require("../../../../modules/accounts/useCases/resetPasswordNoEmail/ResetPasswordNoEmailController");
var _EditUserController = require("../../../../modules/accounts/useCases/editUser/EditUserController");
var _UpdateUserToSubMasterController = require("../../../../modules/accounts/useCases/updateUserToSubMaster/UpdateUserToSubMasterController");
var _ensureAuthenticated = require("../middlewares/ensureAuthenticated");
var _ensureAdmin = require("../middlewares/ensureAdmin");
var _DisableUserController = require("../../../../modules/accounts/useCases/disableUser/DisableUserController");
var _DeleteUserController = require("../../../../modules/accounts/useCases/deleteUser/DeleteUserController");
var _GetLoggedInUserController = require("../../../../modules/accounts/useCases/getLoggedInUser/GetLoggedInUserController");
var _upload = require("../../upload");
var _UploadAvatarController = require("../../../../modules/accounts/useCases/uploadAvatar/UploadAvatarController");
const autheticateRoutes = exports.autheticateRoutes = (0, _express.Router)();
const createUserController = new _CreateUserController.CreateUserController();
const editUserController = new _EditUserController.EditUserController();
const updateUserToSubMasterController = new _UpdateUserToSubMasterController.UpdateUserToSubMasterController();
const getOneUserController = new _GetOneUserController.GetOneUserController();
const getLoggedInUserController = new _GetLoggedInUserController.GetLoggedInUserController();
const deleteUserController = new _DeleteUserController.DeleteUserController();
const disableUserController = new _DisableUserController.DisableUserController();
const getAllUsersController = new _GetAllUsersController.GetAllUsersController();
const resetPasswordNoEmailController = new _ResetPasswordNoEmailController.ResetPasswordNoEmailController();
const getOneUserByEmailController = new _GetOneUserByEmailController.GetOneUserByEmailController();
const authenticateUserController = new _AutenticateUserController.AuthenticateUserController();
const refreshTokenUserController = new _RefreshTokenUserController.RefreshTokenUserController();
const uploadAvatarController = new _UploadAvatarController.UploadAvatarController();
autheticateRoutes.post("/create_user", createUserController.handle);
autheticateRoutes.post("/sessions", authenticateUserController.handle);
autheticateRoutes.get("/user/:id", _ensureAuthenticated.ensureAuthenticated, getOneUserController.handle);
autheticateRoutes.get("/logged_in_user", _ensureAuthenticated.ensureAuthenticated, getLoggedInUserController.handle);
autheticateRoutes.post('/uploadavatar/:id', _ensureAuthenticated.ensureAuthenticated, _upload.upload.single('file'), uploadAvatarController.handle);
autheticateRoutes.delete("/delete_user/:id", _ensureAuthenticated.ensureAuthenticated, _ensureAdmin.ensureAdminAndSubadmin, deleteUserController.handle);
autheticateRoutes.patch("/disable_user/:id", _ensureAuthenticated.ensureAuthenticated, _ensureAdmin.ensureAdminAndSubadmin, disableUserController.handle);
autheticateRoutes.patch("/edit_user/:id", _ensureAuthenticated.ensureAuthenticated, editUserController.handle);
autheticateRoutes.patch("/update_role_user/:id", _ensureAdmin.ensureAdmin, _ensureAuthenticated.ensureAuthenticated, updateUserToSubMasterController.handle);
autheticateRoutes.patch("/reset_password/:id", _ensureAuthenticated.ensureAuthenticated, resetPasswordNoEmailController.handle);
autheticateRoutes.get("/users", _ensureAuthenticated.ensureAuthenticated, _ensureAdmin.ensureAdminAndSubadmin, getAllUsersController.handle);
autheticateRoutes.get("/search_user_byemail", _ensureAuthenticated.ensureAuthenticated, _ensureAdmin.ensureAdminAndSubadmin, getOneUserByEmailController.handle);
autheticateRoutes.post("/refresh_token", refreshTokenUserController.handle);